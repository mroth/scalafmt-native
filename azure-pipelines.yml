# Somse useful references found thus far:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/multiple-phases?view=azure-devops&tabs=yaml
# https://github.com/peterheesterman/chit/blob/master/azure-pipelines.yml

variables:
  scalafmt_version: v2.0.0-RC7
  graalvm_version: 1.0.0-rc16

trigger:
  branches:
    include:
    - refs/heads/*
    - refs/tags/*

jobs:
# Initial task to compile a JAR, store as an artifact to be used by
# downstream builders.
- job: BuildJAR
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: |
      echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee -a /etc/apt/sources.list.d/sbt.list
      sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823
      sudo apt-get update
      sudo apt-get install sbt
    displayName: install sbt
  - script: |
      git clone https://github.com/scalameta/scalafmt --branch ${SCALAFMT_VERSION} --single-branch
      cd scalafmt
      sbt cli/assembly
    displayName: build scalafmt
  - task: PublishPipelineArtifact@0
    inputs:
      targetPath: scalafmt/scalafmt-cli/target/scala-2.12/scalafmt.jar
      artifactName: jar

# Parallel native builders using template
- template: ci/native-build.yml 
  parameters:
    name: BuildNative_Linux
    platform: 'linux-amd64'
    vmImage: 'ubuntu-16.04'
    binPath: bin
    buildFlags: '--static'

- template: ci/native-build.yml
  parameters:
    name: BuildNative_macOS
    platform: 'macos-amd64'
    vmImage: 'macOS-10.14'
    binPath: Contents/Home/bin

# Packager (and uploader), can be any pool
- job: PackageAndUploadReleases
  dependsOn:
    - BuildNative_macOS
    - BuildNative_Linux
  steps:
  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: dist_linux-amd64
      targetPath: $(System.DefaultWorkingDirectory)/dist/linux
  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: dist_macOS-amd64
      targetPath: $(System.DefaultWorkingDirectory)/dist/macOS
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: $(System.DefaultWorkingDirectory)/dist/linux/scalafmt-native
      archiveType: 'zip'
      archiveFile: $(System.DefaultWorkingDirectory)/dist/release/scalafmt-native_linux-amd64.zip
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: $(System.DefaultWorkingDirectory)/dist/macOS/scalafmt-native
      archiveType: 'zip'
      archiveFile: $(System.DefaultWorkingDirectory)/dist/release/scalafmt-native_macOS-amd64.zip 
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: releaseDist
      targetPath: $(System.DefaultWorkingDirectory)/dist/release
  - task: GithubRelease@0
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
    inputs:
      gitHubConnection: 'GitHub-mroth-oauth'
      repositoryName: 'mroth/scalafmt-native'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'auto'
      assets: '$(System.DefaultWorkingDirectory)/dist/release/*.zip'
      assetUploadMode: 'replace'  
      addChangeLog: true
